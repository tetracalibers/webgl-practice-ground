---
import { glslCategoryDetail } from "@/content/config"
import BaseHtml from "@/layout/base-html.astro"
import { getCollection } from "astro:content"

const studyPages = await getCollection("study")

const slugs = [...studyPages.map((page) => page.slug)] as const
type Slug = (typeof slugs)[number]

const order: Slug[] = [
  "white-triangle", // https://wgld.org/d/webgl/w014.html
  "render-full-screen-trinangle-in-wegbl2", //
  "solid-bg", // https://www.shadertoy.com/view/NdySRV
  "resolution-gradient-bg", // https://www.shadertoy.com/view/7sGXzK
  "lerp-2color-bg", // https://www.shadertoy.com/view/NdySR3
  "lerp-3color-bg", // https://www.shadertoy.com/view/fdGXR3
  "bilerp-4color-bg", // https://www.shadertoy.com/view/NsKSDG
  "step-posterization-bg", // https://www.shadertoy.com/view/fsVXWG
  "smooth-step-posterization-bg",
  "polar-gradient-bg", // https://www.shadertoy.com/view/fdKSDG
  "polar-dot-gradient-bg", // https://www.shadertoy.com/view/NdKSDG
  "hsv-color-space-bg", // https://www.shadertoy.com/view/fdVSDG
  "legacy-hash-1d-bg", // https://www.shadertoy.com/view/NsfcDM
  "legacy-hash-2d-bg",
  "hash-1d-bg", // https://www.shadertoy.com/view/NdXyW7
  "hash-in2d-out2d-bg", // https://www.shadertoy.com/view/fsXyW7
  "hash-in2d-out1d-bg",
  "hash-in3d-out3d-bg",
  "hash-in3d-out1d-bg",
  "value-noise-2to1-bilerp-only-bg", // https://thebookofshaders.com/11/?lan=jp , https://www.shadertoy.com/view/NsXyW7
  "value-noise-2to1-bg",
  "value-noise-3to1-bg",
  "plot-linear-func", // https://thebookofshaders.com/05/?lan=jp
  "plot-pow-func",
  "plot-step-func",
  "plot-smoothstep-func",
  "plot-multiple-func-colorful", // https://thebookofshaders.com/06/?lan=jp,
  "shader-side-of-square", // https://thebookofshaders.com/07/?lan=jp
  "circle-outline-by-glsl-length",
  "circle-outline-by-glsl-dot",
  "orb-by-pow", // https://wgld.org/d/glsl/g003.html
  "orb-by-division",
  "sdf-circle-bg", // https://www.shadertoy.com/view/NlXczr
  "draw-circle-glsl", // https://thebookofshaders.com/edit.php#07/circle.frag
  "sdf-rect-bg", // https://www.shadertoy.com/view/ftfczr
  "sdf-rect-fill", // https://thebookofshaders.com/07/
  "sdf-rect-outline",
  "sdf-circle-manhattan-distance", // original
  "sdf-circle-chebyshev-distance",
  "sdf-circle-lp-norm",
  "sdf-segment", // https://iquilezles.org/articles/distfunctions2d/
  "sdf-segment-fill", // https://thebookofshaders.com/07/
  "sdf-segment-outline",
  "draw-line-glsl", // https://thebookofshaders.com/edit.php#07/line.frag
  "fract-x-repeat-gradation", // https://zenn.dev/baroqueengine/books/a19140f2d9fc1a/viewer/0a3941
  "fract-xy-repeat-gradation",
  "x-repeat-circle", // https://zenn.dev/baroqueengine/books/a19140f2d9fc1a/viewer/3e2493
  "xy-repeat-circle"
]

const orderedStudyPages = order.map((slug) => studyPages.find((page) => page.slug === slug)!!)

const webglStudyPages = orderedStudyPages.filter((page) => page.data.category === "webgl")
const glslStudyPages = orderedStudyPages.filter((page) => page.data.category === "glsl")
---

<BaseHtml title="WebGL Study Demo">
  <h2>GLSL</h2>
  {
    Object.entries(glslCategoryDetail).map(([ckey, cdetail]) => {
      const pages = glslStudyPages.filter((page) => page.data.subcategory === ckey)
      if (pages.length < 1) return null
      return (
        <>
          <h3>{cdetail.title}</h3>
          <ul>
            {pages.map((page) => (
              <li>
                <a href={`/webgl-practice-ground/${page.slug}`}>{page.data.title}</a>
              </li>
            ))}
          </ul>
        </>
      )
    })
  }
  <h2>WebGL</h2>
  <ul>
    {
      webglStudyPages.map((page) => (
        <li>
          <a href={`/webgl-practice-ground/${page.slug}`}>{page.data.title}</a>
        </li>
      ))
    }
  </ul>
</BaseHtml>

<style>
  body {
    overflow-y: auto;
    line-height: 2;
  }
</style>
