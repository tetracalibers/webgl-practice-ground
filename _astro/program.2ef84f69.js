class h{_canvas;_gl;constructor(t){this._canvas=document.getElementById(t),this._gl=this._canvas.getContext("webgl2"),this._canvas||console.error("Canvas not found"),this._gl||console.error("WebGL2 is not available on your browser")}setSize(t,r){this._canvas.width=t,this._canvas.height=r}fitScreen(){this._canvas.width=window.innerWidth,this._canvas.height=window.innerHeight}fitScreenSquare(){const t=Math.min(window.innerWidth,window.innerHeight);this.setSize(t,t)}autoResize(t){t(),new ResizeObserver(t).observe(document.body)}set onResize(t){new ResizeObserver(t).observe(document.body)}get canvas(){return this._canvas}get gl(){return this._gl}}class n{_gl;constructor(t){this._gl=t}compileVertexShader(t){const r=this._gl.createShader(this._gl.VERTEX_SHADER);return r?(this.compile(r,t),r):null}compileFragmentShader(t){const r=this._gl.createShader(this._gl.FRAGMENT_SHADER);return r?(this.compile(r,t),r):null}compile(t,r){this._gl.shaderSource(t,r),this._gl.compileShader(t),this._gl.getShaderParameter(t,this._gl.COMPILE_STATUS)||(console.error(this._gl.getShaderInfoLog(t)),this._gl.deleteShader(t))}}class c{_gl;_program;_attributes={};_uniforms={};constructor(t,r,a){if(this._gl=t,this._program=t.createProgram(),!this._program){console.error("Could not create program");return}const i=new n(this._gl),o=i.compileVertexShader(r),s=i.compileFragmentShader(a);if(!(!o||!s)){if(t.attachShader(this._program,o),t.attachShader(this._program,s),t.linkProgram(this._program),!this._gl.getProgramParameter(this._program,this._gl.LINK_STATUS)){console.error("Could not initialize shaders"),t.deleteProgram(this._program);return}this.useProgram()}}useProgram(){this._gl.useProgram(this._program)}setAttributeLocations(t){if(this._program)for(const r of t)this._attributes[r]=this._gl.getAttribLocation(this._program,r)}setUniformLocations(t){if(this._program)for(const r of t)this._uniforms[r]=this._gl.getUniformLocation(this._program,r)}getAttributeLocation(t){return this._attributes[t]}getUniformLocation(t){return this._uniforms[t]}load(t,r){this.useProgram(),this.setAttributeLocations(t),this.setUniformLocations(r)}}export{c as P,h as S};
